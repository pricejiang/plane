name: üß™ CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    name: üî¨ Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üîç Type checking
      run: npx tsc --noEmit --skipLibCheck
      
    - name: üßπ Lint code  
      run: |
        if [ ! -f .eslintrc.json ]; then
          echo "ESLint not configured, skipping lint check"
        else
          npm run lint
        fi
      
    - name: üß™ Run all tests
      run: node run-tests.js
      
    - name: üèóÔ∏è Test build
      run: |
        export NEXT_TELEMETRY_DISABLED=1
        npm run build

  test-categories:
    name: üìä Test Categories
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        test-category: [unit, integration, performance, debug]
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üß™ Run ${{ matrix.test-category }} tests
      run: node run-tests.js ${{ matrix.test-category }}

  build-test:
    name: üèóÔ∏è Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üèóÔ∏è Build application
      run: npm run build
      
    - name: üì§ Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 1

  performance:
    name: ‚ö° Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: ‚ö° Run performance tests
      run: node run-tests.js performance
      
    - name: üìä Performance report
      run: |
        echo "## ‚ö° Performance Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Performance tests completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "- WebWorker stress test: ‚úÖ PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- Memory efficiency: ‚úÖ PASSED" >> $GITHUB_STEP_SUMMARY
        echo "- Processing speed: ‚úÖ PASSED" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: ‚úÖ Status Check
    runs-on: ubuntu-latest
    needs: [test, test-categories, build-test, performance]
    if: always()
    
    steps:
    - name: üìä Check all jobs status
      run: |
        echo "## üéØ CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | ${{ needs.test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Test Categories | ${{ needs.test-categories.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Test | ${{ needs.build-test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance | ${{ needs.performance.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }} |" >> $GITHUB_STEP_SUMMARY
        
    - name: ‚ùå Fail if any job failed
      if: contains(needs.*.result, 'failure')
      run: exit 1